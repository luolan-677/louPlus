处理文本的工具sed
	Stream EDitor, 行编辑器
	sed是一种流编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。然后读入下行，执行下一个循环。
	如果没有使诸如'D'的特殊命令，那会在两个循环之间清空模式空间，但不会清空保留空间。这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。
	功能：主要用来自动编辑一个或多个文件,简化对文件的反复操作,编写转换程序等
	参考： http://www.gnu.org/software/sed/manual/sed.html
sed工具
	用法：
		sed [option]... 'script' inputfile...
		sed支持标准输入，如 ifconfig | sed -n '2p'，直接打印出第二行的内容
	常用选项：
		-n  不输出模式空间内容到屏幕，即不自动打印 # 默认情况下，sed都会把目标文件中的内容进行全文打印，即不进行任何操作就类似于cat进行原文输出
		-e  多点编辑
		-f  /PATH/SCRIPT_FILE  从指定文件中读取编辑脚本
		-r  支持使用扩展正则表达式
		-i  直接对文件进行修改
		-i.bak  备份文件并原处编辑
			sed -i.bak '/^Listen/a line' /etc/passwd
	script:
		'地址命令'
	地址定界：
		(1) 不给地址：对全文进行处理
		(2) 单地址：
			#：指定的行，$：最后一行
			/pattern/：被此处模式所能够匹配到的每一行
		(3) 地址范围：
			#,# sed -n '3,4p' xxx
			#,+# 
			/pat1/,/pat2/ sed -n '/^a/,/^b/p' xxxx
			#,/pat1/
		(4) ~：步进
			1~2 奇数行 seq 10 | sed -n '1~2p'
			2~2 偶数行
	编辑命令：
		d  删除模式空间匹配的行，并立即启用下一轮循环
			seq 10 | sed '1~2d' 删除13579
			sed '/^$/d;/^#/d' /etc/fstab 两个条件一起使用
		p  打印当前模式空间内容，追加到默认输出之后
		a  [\]text  在指定行后面追加文本，支持使用\n实现多行追加
			seq 10 | sed '1~2a line'
			sed '/^root/a new line' /etc/passwd
			sed '/^listen/a listen 8080' /xxx/  
			sed '/^listen/a\   listen 8080' /xxx/ # 如果要添加空格等字符，需要在前面加入斜线
		i  [\]text  在行前面插入文本
		c  [\]text  替换行为单行或多行文本 
			cat /etc/selinux/config | sed '/^SELINUX=/c SELINUX=disabled'
		w  /path/file 保存模式匹配的行至指定文件
			sed '/^#/d;w /home/httpd.conf' /etc/httpd/conf/httpd.conf
		r  /path/file 读取指定文件的文本至模式空间中匹配到的行后
			seq 10 | sed '2~2r /etc/issue'
		=  为模式空间中的行打印行号
			seq '/root/=' /etc/passwd
		!  模式空间中匹配行取反处理
			seq 10 | sed -n '1~2p'
			seq 10 | sed -n '1~2!p'
	s/// 查找替换,支持使用其它分隔符，s@@@，s###
		ifconfig eth0 | sed -n '2s/^.*inet //;s@ netmask.*$@@p' # 打印网卡的IP地址
		ifconfig eth0 | sed -n -e '2s/^.*inet //' -e '2s@ netmask.*$@@p' # 打印网卡的IP地址
		ifconfig eth0 | sed -nr '2s/(^[^0-9]+)([0-9.]+)( .*$)/\2/p'
		ifconfig eth0 | sed -nr '2s/^[^0-9]+([0-9.]+) .*$/\1/p'
		sed -n '/#<VirtualHost/,/#<\/VirtualHost/s@#@@p' /etc/httpd/conf/httpd.conf
		echo /etc/sysconfig/network-scripts/ | sed -r 's@(^/.*/)([^/]+)/?$@\2@'
		sed -rn '/^[[:space:]]+linux16/s#(.*)#\1 net.ifnames=0#p' /boot/grub2/grub.cfg
		sed -rn '/^[[:space:]]+linux16/s#.*#& net.ifnames=0#p' /boot/grub2/grub.cfg # &表示前面搜索出来的内容
		sed -nr '/GRUB_CMDLINE_LINUX="rhgb quiet/s@"$@ net.ifnames=0"@p' /etc/default/grub # 将网卡的名称进行统一显示为eth0
	替换标记：
		g  行内全局替换
		p  显示替换成功的行
		w  /PATH/FILE  将替换成功的行保存至文件中
	sed示例
		var=root sed "s/$var/wang/" /etc/passwd | sed 's/'''$var'''/wang/' /etc/passwd # 三引号是sed特有的
		sed '2p' /etc/passwd
		sed -n '2p' /etc/passwd
		sed -n '1,4p' /etc/passwd
		sed -n '/root/p' /etc/passwd
		sed -n '2,/root/p' /etc/passwd 从2行开始
		sed -n '/^$/=' file 显示空行行号
		sed -n -e '/^$/p' -e '/^$/=' file
		sed '/root/a\superman' /etc/passwd行后
		sed '/root/i\superman' /etc/passwd 行前
		sed '/root/c\superman' /etc/passwd 代替行
		sed '/^$/d' file
		sed '1,10d' file
		nl /etc/passwd | sed '2,5d'
		nl /etc/passwd | sed '2a tea'
		sed 's/test/mytest/g' example
		sed –n 's/root/&superman/p' /etc/passwd 单词后
		sed –n 's/root/superman&/p' /etc/passwd 单词前
		sed -e 's/dog/cat/' -e 's/hi/lo/' pets
		sed –i.bak 's/dog/cat/g' pets
	高级编辑命令
 		P：打印模式空间开端至\n内容，并追加到默认输出之前
 		h: 把模式空间中的内容覆盖至保持空间中
		H：把模式空间中的内容追加至保持空间中
		g: 从保持空间取出数据覆盖至模式空间
		G：从保持空间取出内容追加至模式空间
		x: 把模式空间中的内容与保持空间中的内容进行互换
		n: 读取匹配到的行的下一行覆盖至模式空间
		N：读取匹配到的行的下一行追加至模式空间
		d: 删除模式空间中的行
		D：如果模式空间包含换行符，则删除直到第一个换行符的模式空间中的文本，并不会读取新的输入行，而使用合成的模式空间重新启动循环。如果模式空间不包含换行符，则会像发出d命令那样启动正常的新循环
	sed示例
		sed -n 'n;p' FILE # 读取偶数行
		sed '1!G;h;$!d' FILE # 倒数显示
		sed 'N;D' FILE
		sed '$!N;$!D' FILE
		sed '$!d' FILE
		sed 'G' FILE
		sed 'g' FILE
		sed '/^$/d;G' FILE
		sed 'n;d' FILE
		sed -n '1!G;h;$p' FILE
